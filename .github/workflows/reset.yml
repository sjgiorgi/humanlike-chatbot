name: üí£ Reset ChatLab AWS Environment (Full Cleanup)

on:
  workflow_dispatch:
    inputs:
      root_domain:
        description: "Base domain (e.g., chatlab-test.com)"
        required: true
      subdomain:
        description: "Subdomain (e.g., chatlab)"
        required: true
        default: "chatlab"

permissions:
  contents: read

jobs:
  reset:
    name: Destroy All ChatLab Infrastructure
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      AWS_REGION: us-east-1
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - name: üß± Checkout repository
        uses: actions/checkout@v4

      - name: üîê Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: üßπ Clean ChatLab AWS resources
        run: |
          echo "üî• Beginning full cleanup for ChatLab..."

          SUBDOMAIN="${{ github.event.inputs.subdomain }}"
          DOMAIN="${{ github.event.inputs.root_domain }}"
          FRONTEND_BUCKET="chatlab-${SUBDOMAIN}-frontend"

          echo "üß© Cleaning IAM resources..."
          if aws iam get-instance-profile --instance-profile-name chatlab-eb-instance-profile >/dev/null 2>&1; then
            echo "üîó Detaching role from instance profile..."
            aws iam remove-role-from-instance-profile \
              --instance-profile-name chatlab-eb-instance-profile \
              --role-name chatlab-eb-ec2-role || true
            aws iam delete-instance-profile \
              --instance-profile-name chatlab-eb-instance-profile || true
          fi

          if aws iam get-role --role-name chatlab-eb-ec2-role >/dev/null 2>&1; then
            aws iam delete-role --role-name chatlab-eb-ec2-role || true
          fi

          echo "üß© Cleaning Elastic Beanstalk..."
          aws elasticbeanstalk delete-application \
            --application-name chatlab \
            --terminate-env-by-force || true

          echo "üß© Cleaning RDS..."
          aws rds delete-db-instance \
            --db-instance-identifier chatlab-db \
            --skip-final-snapshot || true
          aws rds delete-db-subnet-group \
            --db-subnet-group-name chatlab-db-subnet || true

          echo "üß© Cleaning CloudFront..."
          OAC_ID=$(aws cloudfront list-origin-access-controls \
            --query "OriginAccessControls[?Name=='ChatLab-OAC'].Id" --output text || true)
          if [ -n "$OAC_ID" ] && [ "$OAC_ID" != "None" ]; then
            aws cloudfront delete-origin-access-control --id "$OAC_ID" || true
          fi

          echo "üß© Cleaning Route53 validation records..."
          ZONE_ID=$(aws route53 list-hosted-zones-by-name \
            --dns-name "$DOMAIN" --query "HostedZones[0].Id" --output text || true)

          if [ -n "$ZONE_ID" ] && [ "$ZONE_ID" != "None" ]; then
            RECORD_NAME=$(aws route53 list-resource-record-sets \
              --hosted-zone-id "$ZONE_ID" \
              --query "ResourceRecordSets[?starts_with(Name, '_26cb8c89a480906084b2ffdfc7469a7b')].Name" \
              --output text || true)
            
            if [ -n "$RECORD_NAME" ]; then
              echo "üßπ Deleting ACM validation record: $RECORD_NAME"
              aws route53 change-resource-record-sets \
                --hosted-zone-id "$ZONE_ID" \
                --change-batch "{\"Changes\":[{\"Action\":\"DELETE\",\"ResourceRecordSet\":{\"Name\":\"$RECORD_NAME\",\"Type\":\"CNAME\"}}]}" || true
            else
              echo "‚úÖ No ACM validation records found."
            fi
          else
            echo "‚ö†Ô∏è No hosted zone found for $DOMAIN ‚Äî skipping Route53 cleanup."
          fi

