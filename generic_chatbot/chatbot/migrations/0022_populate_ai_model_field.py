# Generated by Django 5.2.3 on 2025-08-14 14:58

from django.db import migrations


def populate_ai_model_field(apps, schema_editor):
    """Populate ai_model field for existing Bot records"""
    Bot = apps.get_model('chatbot', 'Bot')
    Model = apps.get_model('chatbot', 'Model')
    ModelProvider = apps.get_model('chatbot', 'ModelProvider')
    
    # Get or create default providers
    openai_provider, _ = ModelProvider.objects.get_or_create(
        name='OpenAI',
        defaults={
            'display_name': 'OpenAI',
            'description': "OpenAI's language models including GPT series"
        }
    )
    
    # Get or create default GPT-4 model
    gpt4_model, _ = Model.objects.get_or_create(
        provider=openai_provider,
        model_id='gpt-4',
        defaults={
            'display_name': 'GPT-4',
            'capabilities': ['Chat', 'Reasoning', 'Analysis']
        }
    )
    
    # Update all bots that don't have an ai_model set
    bots_without_ai_model = Bot.objects.filter(ai_model__isnull=True)
    bots_without_ai_model.update(ai_model=gpt4_model)


def reverse_populate_ai_model_field(apps, schema_editor):
    """Reverse operation - set ai_model to None"""
    Bot = apps.get_model('chatbot', 'Bot')
    # This is a destructive operation, so we'll just pass
    # In a real scenario, you might want to handle this differently
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('chatbot', '0021_alter_bot_ai_model'),
    ]

    operations = [
        migrations.RunPython(
            populate_ai_model_field,
            reverse_populate_ai_model_field
        ),
    ]
